[tool.poetry]
    name        = "jenkins-cve-2024-23897"
    version     = "0.1.0"
    description = "PoC for Jenkins CVE-2024-23897"
    authors     = ["Abraxas <abr4xa5@proton.me>"]
    license     = "MIT"
    readme      = "README.md"

    [tool.poetry.dependencies]
        python        = "^3.11"
        requests      = "^2.31.0"
        shodan        = "^1.31.0"
        mmh3          = "^4.1.0"
        python-dotenv = "^1.0.1"


    [tool.poetry.group.dev.dependencies]
        isort = { extras = ["colors"], version = "^5.13.2" }
        black = "^24.1.1"
        ruff  = "^0.2.0"

[tool.ruff]
    # https://beta.ruff.rs/docs/rules/
    # fix = true
    # include = ["*.py", "*.pyi", "**/pyproject.toml"]
    target-version = "py310"
    line-length    = 88         # as per black specs
    extend-exclude = ["static"]
    [tool.ruff.lint]
        ignore-init-module-imports = true # ignore init files
        select = [
            "B",   # flake8-bugbear
            "C4",  # flake8-comprehensions
            "DTZ", # flake8-datetimez
            "E",   # pycodestyle errors
            "F",   # pyflakes
            "I",   # isort
            "INT", # flake8-gettext
            "PIE", # flake8-pie
            "PLC", # pylint convention
            "PLE", # pylint errors
            "PTH", # flake8-use-pathlib
            "Q",   # flake8-quotes
            "RSE", # flake8-raise
            "RUF", # ruff-specific rules
            "S",   # flake8-bandit
            "UP",  # pyupgrade
            "W",   # pycodestyle warnings
            "T10", # flake8-debugger
            "EM",  # flake8-errmsg
            "RET", # flake8-return
            # "PT",  # flake8-pytest-style
        ]
        unfixable = [
            "ERA", # do not autoremove commented out code
            "B",   # Make all bugbear error unfixable
        ]
        ignore = [
            "RUF001", # ruff-specific rules ambiguous-unicode-character-string
            "S101",   # flake8-bandit assert
            "S308",   # flake8-bandit suspicious-mark-safe-usage
            "E501",   # pycodestyle line-too-long
            "B904",   # raise-without-from-inside-except
            "B008",   # function-call-in-default-argument
            "PTH123", # open() should be replaced by Path.open()
        ]
        [tool.ruff.lint.isort]
            force-single-line   = true
            lines-after-imports = 2

            # [tool.ruff.flake8-pytest-style]
            #     fixture-parentheses = false
            #     mark-parentheses    = false

[tool.black]
    # line-length = 88
    target-version = ["py39", "py310", "py311"]
    # include        = '\.py?$'
    color = true

    exclude = '''
    /(
        \.git
      | \.github
      | \.hg
      | \.mypy_cache
      | \.tox
      | \.venv
      | _build
      | build
      | dist
      | tests/pypi
      | tests/test_artifacts
      | pyproject.toml
    )
    '''

[tool.isort]
    profile                = "black"
    force_single_line      = true
    lines_after_imports    = 2
    skip_gitignore         = true
    include_trailing_comma = true
    # multi_line_output = 3

[build-system]
    requires      = ["poetry-core"]
    build-backend = "poetry.core.masonry.api"
